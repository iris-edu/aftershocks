import os
import math

"""
    Description:

    A Python file that contains all aftershocks data product parameters. You may modify this file to customize 
    plot and animation production. All parameter definitions in this file must follow Python rules. Each 
    parameter group in this file is commented for clarification.
    
    Copyright and License:

    This software Copyright (c) 2018 IRIS (Incorporated Research Institutions for Seismology).

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or (at
    your option) any later version.

    This program is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see http://www.gnu.org/licenses/.

    History:
        2020-09-16 Manoch: V.2020.260 public release
        2020-08-22 Manoch: V.2020.236 FDSN support
        2020-08-01 Manoch: V.2020.214 release.

"""

# Import the aftershocks libraries.
parent_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))

# The run settings.
log_to_screen = True
verbose = False

operator_email = None

src_dir = os.path.join(parent_dir, 'src')
image_dir = os.path.join(parent_dir, 'image')
video_dir = os.path.join(parent_dir, 'video')
data_dir = os.path.join(parent_dir, 'data')
log_dir = os.path.join(parent_dir, 'log')
xml_dir = os.path.join(parent_dir, 'xml')
assets_dir = os.path.join(parent_dir, 'assets')
scratch_dir = os.path.join(parent_dir, 'scratch')

# Aftershocks main script
aftershocks_script = 'aftershock_fdsn_maps.py'

# Start date for catalog queries based on GCMT start
catalog_begin = '1976-01-01'

# FDSN data center that provides the main catalog (must be a key of event_service_url in event_lib).
catalog_dc = 'NEIC'

# Data center that provides the CMT solution (must be a key of event_service_url in event_lib).
gcmt_dc = 'GCMT'

# Mailx application
mailx = '/usr/bin/mailx'

radius_deg = math.pi/180.
spud_service_gcmt_url = 'http://ds.iris.edu/spudservice/momenttensor'

figure_size = (8, 6)
dpi = 150
frames_per_second = 6

logo_image = os.path.join(assets_dir, 'iris_color_screen.png')
logo_width = 180 * 0.3
logo_height = 140 * 0.3
logo_x = figure_size[0] * dpi - logo_width * 1.5
logo_y = logo_height / 2.0

production_label = 'IRIS DMC'

# Colormap.
#color_map = 'rainbow_r'
#map_color_map = 'copper_r'
map_color_map = 'viridis_r'
heatmap_color_map = 'hot_r'

# Magnitude scale used for displaying MT on different maps
mag_scale = {'magnitude_vs_day': 6.7, 'strike_vs_day': 6.7, 'heatmap': 3.5,
             'strike_vs_depth': 8, 'location_map': 6.9, 'location_animation': 6.8,
             'heatmap_animation': 3.5}

# Plots to be generated by default.
map_list = [1, 2, 3, 4, 5, 6, 7]

# The order represents the gallery display order.
map_order_list = [4, 5, 0, 1, 2, 3, 6, 7]
map_index = {0: 'seismicity', 1: 'magnitude_vs_day', 2: 'strike_vs_day', 3: 'strike_vs_depth', 4: 'location_map',
             5: 'heatmap',
             6: 'location_animation', 7: 'heatmap_animation'}
map_description = {0: 'Background seismicity within 100 km depth',
                   1: 'Seismicity  within 10 days of mainshock',
                   2: 'Aftershock distance along strike (nodal plane) vs day',
                   3: 'Aftershock distance along strike (nodal plane) vs depth',
                   4: 'Location of events within 10 days of mainshock',
                   5: 'heatmap of the seismicity  within 10 days of mainshock',
                   6: 'Animation of the seismicity  within 10 days of mainshock',
                   7: 'Animation of the seismicity heatmap within 10 days of mainshock'}

# Plot tag to be included as file name.
map_tag = 'aftershocks_dp'

# Shaded relief basemap's alpha.
heatmap_relief_alpha = 0.25
heatmap_bin_width_km = 5

location_map_relief_alpha = 0.25

# Event marker edge width.
marker_edge_width = 0.05

label_font_size = 8
title_font_size = 9

topo_file = 'ETOPO1_Ice_g_gmt4.grd'
if topo_file == 'etopo5.nc':
    topo_file_name = 'ETOPO5'
    topo_file_x = 'X'
    topo_file_y = 'Y'
    topo_file_z = 'elev'
elif topo_file == 'ETOPO1_Ice_g_gmt4.grd':
    topo_file_name = 'ETOPO1'
    topo_file_x = 'x'
    topo_file_y = 'y'
    topo_file_z = 'z'

topo_file = os.path.join(assets_dir, topo_file)

# Duration in hours since an event's time during  which the event is displayed in animation.
fade_duration = 24

# Use GCMT event coordinates for the mainshock.
use_gcmt_for_mainshock = True

# Script associates GCMT events with FDSN events. If for an FDSN event, a GCMT solution exists, then
# the FDSN event is replaced by the GCMT ones. This option allows plotting the unassociated qualified GCMT
# events.
plot_unassociated_gcmts = True

# Focal mechanism used for the beach balls:
# True: NM x 6 (M11, M22, M33, M12, M13, M23 - the six independent components of the moment tensor
# False: by the number of mechanisms (NM) by 3 (strike, dip, and rake)
focal_mechanism_by_mt = True

# Input number of days before/after or YYYY-MM-DD
days_before = 3
days_before_animation = 1
days_after = 10
request_min_mag = 0
group_sub_index = None

rate_bar_color = '#add8e6'
rate_bar_axes_color = '#72bcd4'
rate_bar_alpha = 0.5

elevation_bar_color = (0.9, 0.9, 0.9)
elevation_bar_axes_color = (0.5, 0.5, 0.5)
elevation_bar_alpha = 0.3

do_seismicity_map = False
# Input number of days before/after or YYYY-MM-DD
if do_seismicity_map:
    days_before = None
    days_after = 1
    request_min_mag = 3.1

aftershocks_depth_radius = 100

mainshock_beach_ball_color = (0.5, 0.5, 0.5)

key_mag_small = {'size': 5, 'x': 0.04, 'y': 0.16, 'text_x': 0.09, 'text_y': 0.14}
key_mag_large = {'size': 7, 'x': 0.04, 'y': 0.08, 'text_x': 0.09, 'text_y': 0.07}

plot_label_location = {'x': 0.02, 'y': 0.2}

plot_label_shift = dict()
plot_label_shift['ll'] = {'x': 0.0, 'y': 0.0}
plot_label_shift['ur'] = {'x': 0.7, 'y': 0.8}

map_grid = {'color': (0.7, 0.7, 0.7), 'alpha': 0.3}

# Number of points along the strike.
num_points_along_strike = 800

# Resolution of boundary database to use. Can be c (crude), l (low), i (intermediate), h (high), f (full) or None.
# If None, no boundary data will be read in. Higher res datasets are much slower to draw. None will be the fastest
# with no boundaries drawn.
animation_basemap_resolution = 'f'
animation_basemap_boundaries = True

# Color maps Rainbow_r.
color_map_r = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
               1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
               1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
               1.0, 1.0, 1.0, 1.0, 0.9980, 0.9902, 0.9824, 0.9745, 0.9667, 0.9588, 0.9510, 0.9431, 0.9353, 0.9275,
               0.9196, 0.9118, 0.9039, 0.8961, 0.8882, 0.8804, 0.8725, 0.8647, 0.8569, 0.8490, 0.8412, 0.8333, 0.8255,
               0.8176, 0.8098, 0.8020, 0.7941, 0.7863, 0.7784, 0.7706, 0.7627, 0.7549, 0.7471, 0.7392, 0.7314, 0.7235,
               0.7157, 0.7078, 0.7000, 0.6922, 0.6843, 0.6765, 0.6686, 0.6608, 0.6529, 0.6451, 0.6373, 0.6294, 0.6216,
               0.6137, 0.6059, 0.5980, 0.5902, 0.5824, 0.5745, 0.5667, 0.5588, 0.5510, 0.5431, 0.5353, 0.5275, 0.5196,
               0.5118, 0.5039, 0.4961, 0.4882, 0.4804, 0.4725, 0.4647, 0.4569, 0.4490, 0.4412, 0.4333, 0.4255, 0.4176,
               0.4098, 0.4020, 0.3941, 0.3863, 0.3784, 0.3706, 0.3627, 0.3549, 0.3471, 0.3392, 0.3314, 0.3235, 0.3157,
               0.3078, 0.3000, 0.2922, 0.2843, 0.2765, 0.2686, 0.2608, 0.2529, 0.2451, 0.2373, 0.2294, 0.2216, 0.2137,
               0.2059, 0.1980, 0.1902, 0.1824, 0.1745, 0.1667, 0.1588, 0.1510, 0.1431, 0.1353, 0.1275, 0.1196, 0.1118,
               0.1039, 0.0961, 0.0882, 0.0804, 0.0725, 0.0647, 0.0569, 0.0490, 0.0412, 0.0333, 0.0255, 0.0176, 0.0098,
               0.0020, 0.0059, 0.0137, 0.0216, 0.0294, 0.0373, 0.0451, 0.0529, 0.0608, 0.0686, 0.0765, 0.0843, 0.0922,
               0.1000, 0.1078, 0.1157, 0.1235, 0.1314, 0.1392, 0.1471, 0.1549, 0.1627, 0.1706, 0.1784, 0.1863, 0.1941,
               0.2020, 0.2098, 0.2176, 0.2255, 0.2333, 0.2412, 0.2490, 0.2569, 0.2647, 0.2725, 0.2804, 0.2882, 0.2961,
               0.3039, 0.3118, 0.3196, 0.3275, 0.3353, 0.3431, 0.3510, 0.3588, 0.3667, 0.3745, 0.3824, 0.3902, 0.3980,
               0.4059, 0.4137, 0.4216, 0.4294, 0.4373, 0.4451, 0.4529, 0.4608, 0.4686, 0.4765, 0.4843, 0.499]

color_map_g = [0.0000, 0.0123, 0.0246, 0.0370, 0.0493, 0.0616, 0.0739, 0.0861, 0.0984, 0.1107, 0.1229, 0.1351, 0.1473,
               0.1595, 0.1716, 0.1837, 0.1958, 0.2079, 0.2199, 0.2319, 0.2439, 0.2558, 0.2677, 0.2796, 0.2914, 0.3032,
               0.3149, 0.3265, 0.3382, 0.3497, 0.3612, 0.3727, 0.3841, 0.3955, 0.4067, 0.4180, 0.4291, 0.4402, 0.4512,
               0.4622, 0.4731, 0.4839, 0.4947, 0.5053, 0.5159, 0.5264, 0.5369, 0.5472, 0.5575, 0.5677, 0.5778, 0.5878,
               0.5977, 0.6075, 0.6173, 0.6269, 0.6365, 0.6459, 0.6553, 0.6645, 0.6737, 0.6827, 0.6917, 0.7005, 0.7093,
               0.7179, 0.7264, 0.7348, 0.7431, 0.7513, 0.7594, 0.7674, 0.7752, 0.7829, 0.7905, 0.7980, 0.8054, 0.8126,
               0.8197, 0.8267, 0.8336, 0.8403, 0.8470, 0.8534, 0.8598, 0.8660, 0.8721, 0.8781, 0.8839, 0.8896, 0.8952,
               0.9006, 0.9059, 0.9110, 0.9160, 0.9209, 0.9256, 0.9302, 0.9347, 0.9390, 0.9432, 0.9472, 0.9511, 0.9548,
               0.9584, 0.9618, 0.9651, 0.9683, 0.9713, 0.9741, 0.9768, 0.9794, 0.9818, 0.9841, 0.9862, 0.9882, 0.9900,
               0.9916, 0.9932, 0.9945, 0.9957, 0.9968, 0.9977, 0.9985, 0.9991, 0.9995, 0.9998, 1.0, 1.0, 0.9998,
               0.9995, 0.9991, 0.9985, 0.9977, 0.9968, 0.9957, 0.9945, 0.9932, 0.9916, 0.9900, 0.9882, 0.9862, 0.9841,
               0.9818, 0.9794, 0.9768, 0.9741, 0.9713, 0.9683, 0.9651, 0.9618, 0.9584, 0.9548, 0.9511, 0.9472, 0.9432,
               0.9390, 0.9347, 0.9302, 0.9256, 0.9209, 0.9160, 0.9110, 0.9059, 0.9006, 0.8952, 0.8896, 0.8839, 0.8781,
               0.8721, 0.8660, 0.8598, 0.8534, 0.8470, 0.8403, 0.8336, 0.8267, 0.8197, 0.8126, 0.8054, 0.7980, 0.7905,
               0.7829, 0.7752, 0.7674, 0.7594, 0.7513, 0.7431, 0.7348, 0.7264, 0.7179, 0.7093, 0.7005, 0.6917, 0.6827,
               0.6737, 0.6645, 0.6553, 0.6459, 0.6365, 0.6269, 0.6173, 0.6075, 0.5977, 0.5878, 0.5778, 0.5677, 0.5575,
               0.5472, 0.5369, 0.5264, 0.5159, 0.5053, 0.4947, 0.4839, 0.4731, 0.4622, 0.4512, 0.4402, 0.4291, 0.4180,
               0.4067, 0.3955, 0.3841, 0.3727, 0.3612, 0.3497, 0.3382, 0.3265, 0.3149, 0.3032, 0.2914, 0.2796, 0.2677,
               0.2558, 0.2439, 0.2319, 0.2199, 0.2079, 0.1958, 0.1837, 0.1716, 0.1595, 0.1473, 0.1351, 0.1229, 0.1107,
               0.0984, 0.0861, 0.0739, 0.0616, 0.0493, 0.0370, 0.0246, 0.01]

color_map_b = [0.0000, 0.0062, 0.0123, 0.0185, 0.0246, 0.0308, 0.0370, 0.0431, 0.0493, 0.0554, 0.0616, 0.0677, 0.0739,
               0.0800, 0.0861, 0.0923, 0.0984, 0.1045, 0.1107, 0.1168, 0.1229, 0.1290, 0.1351, 0.1412, 0.1473, 0.1534,
               0.1595, 0.1656, 0.1716, 0.1777, 0.1837, 0.1898, 0.1958, 0.2019, 0.2079, 0.2139, 0.2199, 0.2260, 0.2319,
               0.2379, 0.2439, 0.2499, 0.2558, 0.2618, 0.2677, 0.2737, 0.2796, 0.2855, 0.2914, 0.2973, 0.3032, 0.3090,
               0.3149, 0.3207, 0.3265, 0.3324, 0.3382, 0.3439, 0.3497, 0.3555, 0.3612, 0.3670, 0.3727, 0.3784, 0.3841,
               0.3898, 0.3955, 0.4011, 0.4067, 0.4124, 0.4180, 0.4235, 0.4291, 0.4347, 0.4402, 0.4457, 0.4512, 0.4567,
               0.4622, 0.4677, 0.4731, 0.4785, 0.4839, 0.4893, 0.4947, 0.5000, 0.5053, 0.5106, 0.5159, 0.5212, 0.5264,
               0.5317, 0.5369, 0.5421, 0.5472, 0.5524, 0.5575, 0.5626, 0.5677, 0.5727, 0.5778, 0.5828, 0.5878, 0.5928,
               0.5977, 0.6026, 0.6075, 0.6124, 0.6173, 0.6221, 0.6269, 0.6317, 0.6365, 0.6412, 0.6459, 0.6506, 0.6553,
               0.6599, 0.6645, 0.6691, 0.6737, 0.6782, 0.6827, 0.6872, 0.6917, 0.6961, 0.7005, 0.7049, 0.7093, 0.7136,
               0.7179, 0.7222, 0.7264, 0.7307, 0.7348, 0.7390, 0.7431, 0.7473, 0.7513, 0.7554, 0.7594, 0.7634, 0.7674,
               0.7713, 0.7752, 0.7791, 0.7829, 0.7867, 0.7905, 0.7943, 0.7980, 0.8017, 0.8054, 0.8090, 0.8126, 0.8162,
               0.8197, 0.8233, 0.8267, 0.8302, 0.8336, 0.8370, 0.8403, 0.8437, 0.8470, 0.8502, 0.8534, 0.8566, 0.8598,
               0.8629, 0.8660, 0.8691, 0.8721, 0.8751, 0.8781, 0.8810, 0.8839, 0.8868, 0.8896, 0.8924, 0.8952, 0.8979,
               0.9006, 0.9032, 0.9059, 0.9085, 0.9110, 0.9135, 0.9160, 0.9185, 0.9209, 0.9233, 0.9256, 0.9280, 0.9302,
               0.9325, 0.9347, 0.9369, 0.9390, 0.9411, 0.9432, 0.9452, 0.9472, 0.9491, 0.9511, 0.9529, 0.9548, 0.9566,
               0.9584, 0.9601, 0.9618, 0.9635, 0.9651, 0.9667, 0.9683, 0.9698, 0.9713, 0.9727, 0.9741, 0.9755, 0.9768,
               0.9781, 0.9794, 0.9806, 0.9818, 0.9830, 0.9841, 0.9852, 0.9862, 0.9872, 0.9882, 0.9891, 0.9900, 0.9908,
               0.9916, 0.9924, 0.9932, 0.9939, 0.9945, 0.9951, 0.9957, 0.9963, 0.9968, 0.9973, 0.9977, 0.9981, 0.9985,
               0.9988, 0.9991, 0.9993, 0.9995, 0.9997, 0.9998, 0.9999, 0.9999]


